{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","components/Container/Container.js","components/Container/Container.module.css","redux/contacts/contacts-actions.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","initialUserState","name","email","user","createReducer","_","payload","setError","error","isAuthenticated","combineReducers","getIsAuthenticated","state","getUserName","Container","children","className","styles","module","exports","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","defaultAvatar","alt","width","Button","type","variant","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","Spinner","animation","role","path","items","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e310904.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n  // <div>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1P_2s\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/chageFilter');\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\n// const Navigation = ({ isAuthenticated }) => (\r\n//   <nav>\r\n//     <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n//       Главная\r\n//     </NavLink>\r\n\r\n//     {isAuthenticated && (\r\n//       <NavLink\r\n//         to=\"/contacts\"\r\n//         exact\r\n//         style={styles.link}\r\n//         activeStyle={styles.activeLink}\r\n//       >\r\n//         Контакты\r\n//       </NavLink>\r\n//     )}\r\n//   </nav>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ec618d9c.png\";","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <Button type=\"button\" variant=\"primary\" onClick={onLogout}>\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUserName(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\n// const UserMenu = ({ avatar, name, onLogout }) => (\r\n//   <div style={styles.container}>\r\n//     <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n//     <span style={styles.name}>Welcome, {name}</span>\r\n//     <Button type=\"button\" variant=\"primary\" onClick={onLogout}>\r\n//       Logout\r\n//     </Button>\r\n//   </div>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUserName(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\n// const AppBar = ({ isAuthenticated }) => (\r\n//   <header style={styles.header}>\r\n//     <Navigation />\r\n//     {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//   </header>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  getIsAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  getIsAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n\r\n// render={props =>\r\n//       isAuthenticated && routeProps.restricted ? (\r\n//         <Redirect to={redirectTo} />\r\n//       ) : (\r\n//         <Component {...props} />\r\n//       )\r\n//     }\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Spinner } from 'react-bootstrap';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsVIew'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <div className=\"d-flex justify-content-center\">\n            <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </div>\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\n// export default connect(null, mapDispatchToProps)(App);\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onGetCurrentUser();\n//   }\n\n//   render() {\n//     return (\n//       <Container>\n//         <AppBar />\n\n//         <Suspense\n//           fallback={\n//             <div className=\"d-flex justify-content-center\">\n//               <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n//                 <span className=\"sr-only\">Loading...</span>\n//               </Spinner>\n//             </div>\n//           }\n//         >\n//           <Switch>\n//             <PublicRoute exact path=\"/\" component={HomeView} />\n//             <PublicRoute\n//               path=\"/register\"\n//               restricted\n//               component={RegisterView}\n//               redirectTo=\"/contacts\"\n//             />\n//             <PublicRoute\n//               path=\"/login\"\n//               restricted\n//               component={LoginView}\n//               redirectTo=\"/contacts\"\n//             />\n//             <PrivateRoute\n//               path=\"/contacts\"\n//               component={ContactsView}\n//               redirectTo=\"/login\"\n//             />\n//           </Switch>\n//         </Suspense>\n//       </Container>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: setError,\r\n  [addContactError]: setError,\r\n  [deleteContactError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}