{"version":3,"sources":["views/RegisterView.js"],"names":["styles","h1","textAlign","color","form","width","margin","label","display","flexDirection","marginBottom","RegisterView","onRegister","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","style","onSubmit","e","preventDefault","authOperations","register","autoComplete","Group","controlId","Label","column","sm","Control","type","placeholder","onChange","evt","target","value","variant","size","block"],"mappings":"gQAMMA,EAAS,CACbC,GAAI,CACFC,UAAW,SACXC,MAAO,WAETC,KAAM,CACJC,MAAO,IACPC,OAAQ,QAEVC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAQH,SAASC,EAAT,GAAsC,EAAdC,WAAe,IAC9CC,EAAWC,cADkC,EAG3BC,mBAAS,IAHkB,mBAG5CC,EAH4C,KAGtCC,EAHsC,OAIzBF,mBAAS,IAJgB,mBAI5CG,EAJ4C,KAIrCC,EAJqC,OAKnBJ,mBAAS,IALU,mBAK5CK,EAL4C,KAKlCC,EALkC,KA6BnD,OACE,gCACE,oBAAIC,MAAOtB,EAAOC,GAAlB,iIAEA,eAAC,IAAD,CAAMsB,SAdW,SAAAC,GACnBA,EAAEC,iBAEFZ,EAASa,IAAeC,SAAS,CAAEX,OAAME,QAAOE,cAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBC,MAAOtB,EAAOI,KAAMwB,aAAa,MAA/D,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,uBAGA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLnB,KAAK,OACLoB,YAAY,kBACZC,SAnCS,SAAAC,GACjBrB,EAAQqB,EAAIC,OAAOC,QAmCXA,MAAOxB,OAGX,eAAC,IAAKa,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,2BAGA,cAAC,IAAKC,QAAN,CACEC,KAAK,QACLnB,KAAK,QACLoB,YAAY,cACZC,SA3CU,SAAAC,GAClBnB,EAASmB,EAAIC,OAAOC,QA2CZA,MAAOtB,OAIX,eAAC,IAAKW,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,sBAGA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLnB,KAAK,WACLoB,YAAY,WACZC,SApDa,SAAAC,GACrBjB,EAAYiB,EAAIC,OAAOC,QAoDfA,MAAOpB,OAIX,cAAC,IAAD,CAAQe,KAAK,SAASM,QAAQ,SAASC,KAAK,KAAKC,OAAK,EAAtD","file":"static/js/7.29ec4e5c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  h1: {\r\n    textAlign: 'center',\r\n    color: '#E84A5F',\r\n  },\r\n  form: {\r\n    width: 320,\r\n    margin: 'auto',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\nexport default function RegisterView({ onRegister }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const updateName = evt => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const updateEmail = evt => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const updatePassword = evt => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(authOperations.register({ name, email, password }));\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={styles.h1}>Страница регистрации</h1>\r\n\r\n      <Form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <Form.Group controlId=\"formPlaintextEmail\">\r\n          <Form.Label column sm=\"7\">\r\n            Your name\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={updateName}\r\n            value={name}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label column sm=\"7\">\r\n            Email address\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={updateEmail}\r\n            value={email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label column sm=\"7\">\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={updatePassword}\r\n            value={password}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"danger\" size=\"lg\" block>\r\n          Зарегистрироваться\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class RegisterView extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onRegister(this.state);\r\n\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1 style={styles.h1}>Страница регистрации</h1>\r\n\r\n//         <Form\r\n//           onSubmit={this.handleSubmit}\r\n//           style={styles.form}\r\n//           autoComplete=\"off\"\r\n//         >\r\n//           <Form.Group controlId=\"formPlaintextEmail\">\r\n//             <Form.Label column sm=\"7\">\r\n//               Your name\r\n//             </Form.Label>\r\n//             <Form.Control\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               placeholder=\"Enter your name\"\r\n//               onChange={this.handleChange}\r\n//               value={name}\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group controlId=\"formBasicEmail\">\r\n//             <Form.Label column sm=\"7\">\r\n//               Email address\r\n//             </Form.Label>\r\n//             <Form.Control\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               placeholder=\"Enter email\"\r\n//               onChange={this.handleChange}\r\n//               value={email}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"formBasicPassword\">\r\n//             <Form.Label column sm=\"7\">\r\n//               Password\r\n//             </Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               placeholder=\"Password\"\r\n//               onChange={this.handleChange}\r\n//               value={password}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button type=\"submit\" variant=\"danger\" size=\"lg\" block>\r\n//             Зарегистрироваться\r\n//           </Button>\r\n//         </Form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   onSubmit: (data) => dispatch(authOperations.register(data)),\r\n// }; analog\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}