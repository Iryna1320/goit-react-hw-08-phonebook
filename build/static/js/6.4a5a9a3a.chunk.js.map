{"version":3,"sources":["views/LoginView.js"],"names":["styles","h1","textAlign","color","form","width","margin","label","display","flexDirection","marginBottom","LoginView","onLogin","dispatch","useDispatch","useState","email","setEmail","password","setPassword","style","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","Group","controlId","Label","column","sm","Control","placeholder","type","name","value","onChange","evt","target","variant","size","block"],"mappings":"iQAMMA,EAAS,CACbC,GAAI,CACFC,UAAW,SACXC,MAAO,WAETC,KAAM,CACJC,MAAO,IACPC,OAAQ,QAEVC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,EAAT,GAAgC,EAAXC,QAAY,IACxCC,EAAWC,cAD4B,EAGnBC,mBAAS,IAHU,mBAGtCC,EAHsC,KAG/BC,EAH+B,OAIbF,mBAAS,IAJI,mBAItCG,EAJsC,KAI5BC,EAJ4B,KAuB7C,OACE,gCACE,oBAAIC,MAAOpB,EAAOC,GAAlB,mGAEA,eAAC,IAAD,CAAMoB,SAbW,SAAAC,GACnBA,EAAEC,iBAEFV,EAASW,IAAeC,MAAM,CAAET,QAAOE,cAEvCD,EAAS,IACTE,EAAY,KAOoBC,MAAOpB,EAAOI,KAAMsB,aAAa,MAA/D,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,mBAIA,cAAC,IAAKC,QAAN,CACEC,YAAY,QACZC,KAAK,QACLC,KAAK,QACLC,MAAOpB,EACPqB,SAhCU,SAAAC,GAClBrB,EAASqB,EAAIC,OAAOH,aAmChB,eAAC,IAAKT,MAAN,CAAYC,UAAU,wBAAtB,UACE,cAAC,IAAKC,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,sBAIA,cAAC,IAAKC,QAAN,CACEE,KAAK,WACLD,YAAY,WACZE,KAAK,WACLC,MAAOlB,EACPmB,SA1Ca,SAAAC,GACrBnB,EAAYmB,EAAIC,OAAOH,aA6CnB,cAAC,IAAD,CAAQF,KAAK,SAASM,QAAQ,SAASC,KAAK,KAAKC,OAAK,EAAtD","file":"static/js/6.4a5a9a3a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  h1: {\r\n    textAlign: 'center',\r\n    color: '#E84A5F',\r\n  },\r\n  form: {\r\n    width: 320,\r\n    margin: 'auto',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView({ onLogin }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const updateEmail = evt => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const updatePassword = evt => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={styles.h1}>Страница логина</h1>\r\n\r\n      <Form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <Form.Group controlId=\"formPlaintextEmail\">\r\n          <Form.Label column sm=\"2\">\r\n            Email\r\n          </Form.Label>\r\n\r\n          <Form.Control\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={updateEmail}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formPlaintextPassword\">\r\n          <Form.Label column sm=\"2\">\r\n            Password\r\n          </Form.Label>\r\n\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={updatePassword}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"danger\" size=\"lg\" block>\r\n          Войти\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class LoginView extends Component {\r\n//   state = {\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onLogin(this.state);\r\n\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1 style={styles.h1}>Страница логина</h1>\r\n\r\n//         <Form\r\n//           onSubmit={this.handleSubmit}\r\n//           style={styles.form}\r\n//           autoComplete=\"off\"\r\n//         >\r\n//           <Form.Group controlId=\"formPlaintextEmail\">\r\n//             <Form.Label column sm=\"2\">\r\n//               Email\r\n//             </Form.Label>\r\n\r\n//             <Form.Control\r\n//               placeholder=\"Email\"\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"formPlaintextPassword\">\r\n//             <Form.Label column sm=\"2\">\r\n//               Password\r\n//             </Form.Label>\r\n\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button type=\"submit\" variant=\"danger\" size=\"lg\" block>\r\n//             Войти\r\n//           </Button>\r\n//         </Form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogin: authOperations.logIn,\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   onSubmit: (data) => dispatch(authOperations.logIn(data)),\r\n// }; analog\r\n\r\n// export default connect(null, mapDispatchToProps)(LoginView);\r\n"],"sourceRoot":""}